# -*- coding: utf-8 -*-
# MorphX - Toolkit for morphology exploration and segmentation
#
# Copyright (c) 2019 - now
# Max Planck Institute of Neurobiology, Martinsried, Germany
# Authors: Jonathan Klimesch

import numpy as np
from collections import defaultdict


def extract_mesh_subset(vertices: np.ndarray, mapping: defaultdict, local_bfs: np.ndarray) -> np.ndarray:
    """ Returns the mesh subset of given skeleton nodes based on a mapping dict between skeleton and mesh.

    Args:
        vertices:
        mapping:
        local_bfs: Skeleton node index array which was generated by a local BFS.

    Returns:

    """
    total = []
    for i in local_bfs:
        total.extend(mapping[i])
    # if labels is None:
    #     return vertices[total], None
    # else:
    #     return vertices[total], labels[total]
    return vertices[total]
